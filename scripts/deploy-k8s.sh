#!/bin/bash

# Script para deploy da aplica√ß√£o no Kubernetes
# Uso: ./scripts/deploy-k8s.sh [ambiente]

set -e

ENVIRONMENT=${1:-local}
NAMESPACE="postech-fase2"

echo "üöÄ Iniciando deploy da aplica√ß√£o Postech Fase 2..."
echo "üìã Ambiente: $ENVIRONMENT"
echo "üè∑Ô∏è  Namespace: $NAMESPACE"

# Fun√ß√£o para verificar se o kubectl est√° dispon√≠vel
check_kubectl() {
    if ! command -v kubectl &> /dev/null; then
        echo "‚ùå kubectl n√£o encontrado. Por favor, instale o kubectl."
        exit 1
    fi
}

# Fun√ß√£o para verificar se o Docker est√° dispon√≠vel
check_docker() {
    if ! command -v docker &> /dev/null; then
        echo "‚ùå Docker n√£o encontrado. Por favor, instale o Docker."
        exit 1
    fi
}

# Fun√ß√£o para build da imagem
build_image() {
    echo "üî® Build da imagem Docker..."
    docker build -f backend/Dockerfile.prod -t postech-app:latest ./backend
    echo "‚úÖ Imagem buildada com sucesso"
}

# Fun√ß√£o para criar namespace
create_namespace() {
    echo "üì¶ Criando namespace..."
    kubectl create namespace $NAMESPACE --dry-run=client -o yaml | kubectl apply -f -
    echo "‚úÖ Namespace criado"
}

# Fun√ß√£o para aplicar recursos
apply_resources() {
    echo "üìã Aplicando recursos Kubernetes..."
    kubectl apply -k k8s/
    echo "‚úÖ Recursos aplicados"
}

# Fun√ß√£o para aguardar pods ficarem prontos
wait_for_pods() {
    echo "‚è≥ Aguardando pods ficarem prontos..."
    kubectl wait --for=condition=ready pod -l app=postech-app -n $NAMESPACE --timeout=300s
    kubectl wait --for=condition=ready pod -l app=postgres -n $NAMESPACE --timeout=300s
    echo "‚úÖ Pods prontos"
}

# Fun√ß√£o para mostrar status
show_status() {
    echo "üìä Status dos recursos:"
    kubectl get all -n $NAMESPACE
    echo ""
    echo "üîç Logs da aplica√ß√£o:"
    kubectl logs -n $NAMESPACE deployment/postech-app-deployment --tail=10
}

# Fun√ß√£o para executar migra√ß√µes
run_migrations() {
    echo "üóÑÔ∏è  Executando migra√ß√µes do banco..."
    kubectl exec -n $NAMESPACE deployment/postech-app-deployment -- alembic upgrade head
    echo "‚úÖ Migra√ß√µes executadas"
}

# Fun√ß√£o para mostrar informa√ß√µes de acesso
show_access_info() {
    echo ""
    echo "üéâ Deploy conclu√≠do com sucesso!"
    echo ""
    echo "üìã Informa√ß√µes de acesso:"
    echo "   Namespace: $NAMESPACE"
    echo "   API: http://localhost:8080 (ap√≥s port-forward)"
    echo "   Swagger: http://localhost:8080/docs"
    echo ""
    echo "üîß Comandos √∫teis:"
    echo "   Port-forward: kubectl port-forward -n $NAMESPACE svc/postech-app-service 8080:80"
    echo "   Logs: kubectl logs -n $NAMESPACE deployment/postech-app-deployment -f"
    echo "   Status: kubectl get all -n $NAMESPACE"
    echo "   Delete: kubectl delete namespace $NAMESPACE"
}

# Execu√ß√£o principal
main() {
    check_kubectl
    check_docker
    
    build_image
    create_namespace
    apply_resources
    wait_for_pods
    run_migrations
    show_status
    show_access_info
}

# Executar fun√ß√£o principal
main 